#
# COPYRIGHT Ericsson 2022
#
#
#
# The copyright to the computer program(s) herein is the property of
#
# Ericsson Inc. The programs may be used and/or copied only with written
#
# permission from Ericsson Inc. or in accordance with the terms and
#
# conditions stipulated in the agreement/contract under which the
#
# program(s) have been supplied.
#

# Default values for eric-vnfm-orchestrator-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1
updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 0
    maxSurge: 25%

global:
  registry:
    url: armdocker.rnd.ericsson.se
    imagePullPolicy: IfNotPresent
  timezone: UTC
  support:
    ipv6:
      enabled: false
  nodeSelector: {}
  labels: {}
  annotations: {}
  # fsGroup:
  #   manual: 15000
  #   fnamespace: true
  #internalIPFamily: IPv6 or IPv4

imageCredentials:
  evnfmMB:
    repoPath: # see default value in eric-product-info.yaml file
  sles:
    repoPath: # see default value in eric-product-info.yaml file

## String to partially override rabbitmq.fullname template (will maintain the release name)
##
# nameOverride: ""

## String to fully override rabbitmq.fullname template
##
# fullnameOverride: ""

## Use an alternate scheduler, e.g. "stork".
# schedulerName:

## Configure resource requests and limits
##
resources:
  rabbitmq:
    limits:
      cpu: 1000m
      memory: 512Mi
    requests:
      cpu: 500m
      memory: 256Mi
  volumePermissions:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  logshipper:
    requests:
      memory: "50Mi"
      cpu: "50m"
    limits:
      memory: "100Mi"
      cpu: "100m"

## does your cluster have rbac enabled? assume yes by default
rbacEnabled: true

## RabbitMQ should be initialized one by one when building cluster for the first time.
## Therefore, the default value of podManagementPolicy is 'OrderedReady'
## Once the RabbitMQ participates in the cluster, it waits for a response from another
## RabbitMQ in the same cluster at reboot, except the last RabbitMQ of the same cluster.
## If the cluster exits gracefully, you do not need to change the podManagementPolicy
## because the first RabbitMQ of the statefulset always will be last of the cluster.
## However if the last RabbitMQ of the cluster is not the first RabbitMQ due to a failure,
## you must change podManagementPolicy to 'Parallel'.
##
podManagementPolicy: OrderedReady

## RabbitMQ credentials
credentials:
  kubernetesSecretName: eric-eo-evnfm-mb-messaging-secret
  enabled: true
  keyForUserId: rabbitmq-username
  keyForUserPw: rabbitmq-password

## section of specific values for rabbitmq
rabbitmq:

  ## Erlang cookie to determine whether different nodes are allowed to communicate with each other
  ##
  # erlangCookie:
  existingErlangSecret: eric-eo-evnfm-mb-messaging-secret

  ## Node name to cluster with. e.g.: `clusternode@hostname`
  ##
  # rabbitmqClusterNodeName:

  ## Value for the RABBITMQ_LOGS environment variable
  ##
  logs: '/logs/rabbitmq.log'

  ## RabbitMQ Max File Descriptors
  ##
  setUlimitNofiles: true
  ulimitNofiles: '65536'

  ## RabbitMQ maximum available scheduler threads and online scheduler threads
  ##
  maxAvailableSchedulers: 2
  onlineSchedulers: 1

  ## Plugins to enable
  plugins: "rabbitmq_management rabbitmq_peer_discovery_k8s"

  ## Extra plugins to enable
  ## Use this instead of `plugins` to add new plugins
  # extraPlugins: ""

  ## Clustering settings
  clustering:
    address_type: hostname
    k8s_domain: cluster.local

  loadDefinition:
    enabled: false
    secretName: load-definition

  ioThreadPoolSize: 64

  ## environment variables to configure rabbitmq
  env: {}

  ## Configuration file content: required cluster configuration
  ## Do not override unless you know what you are doing. To add more configuration, use `extraConfiguration` of `advancedConfiguration` instead
  configuration: |-
    loopback_users = none

  ## Configuration file content: extra configuration
  ## Use this instead of `configuration` to add more configuration
  extraConfiguration: |-
    #disk_free_limit.absolute = 50MB
    #management.load_definitions = /app/load_definition.json

  ## Configuration file content: advanced configuration
  ## Use this as additional configuraton in classic config format (Erlang term configuration format)
  advancedConfiguration: |-

## Kubernetes service type
service:
  type: ClusterIP
  ## Node port
  ##
  # nodePort: 30672

  ## Amqp port
  ##
  port: 5672

  ## Dist port
  ##
  distPort: 25672

  ## RabbitMQ Manager port
  ##
  managerPort: 15672

  ## Load Balancer sources
  ##
  # loadBalancerSourceRanges:
  # - 10.10.10.0/24

## Pod Security Context
##
securityContext:
  enabled: true
  # fsGroup: 999  Overwrite by DR-D1123-123
  runAsUser: 999
  runAsNonRoot: true
  allowPrivilegeEscalation: false

persistence:
  persistentVolumeClaim:
    ## this enables PVC templates that will create one per pod
    enabled: true
    ## rabbitmq data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: null
    accessMode: ReadWriteOnce
    # If you change this value, you might have to adjust `rabbitmq.diskFreeLimit` as well.
    size: 8Gi
    # persistence directory, maps to the rabbitmq data directory
    path: /opt/rabbitmq/var/lib/rabbitmq
  ## Existing PersistentVolumeClaims
  ## The value is evaluated as a template
  ## So, for example, the name can depend on .Release or .Chart
  # existingClaim: ""


## Pod priority
# priorityClassName: ""


## Node labels and tolerations for pod assignment
tolerations:
  messagebus:
    - key: node.kubernetes.io/not-ready
      operator: Exists
      effect: NoExecute
      tolerationSeconds: 0
    - key: node.kubernetes.io/unreachable
      operator: Exists
      effect: NoExecute
      tolerationSeconds: 0

affinity:
  podAntiAffinity: "hard"

## Configure the ingress resource that allows you to access the
## Wordpress installation. Set up the URL
##
ingress:
  ## Set to true to enable ingress record generation
  enabled: false

  ## The list of hostnames to be covered with this ingress record.
  ## Most likely this will be just one host, but in the event more hosts are needed, this is an array
  ## hostName: foo.bar.com
  path: /

  ## Set this to true in order to enable TLS on the ingress record
  ## A side effect of this will be that the backend wordpress service will be connected at port 443
  tls: false

  ## If TLS is set to true, you must declare what secret will store the key/certificate for TLS
  tlsSecret: myTlsSecret

  ## Ingress annotations done as key:value pairs
  ## If you're using kube-lego, you will want to add:
  ## kubernetes.io/tls-acme: true
  ##
  ## For a full list of possible ingress annotations, please see
  ##
  ## If tls is set to true, annotation ingress.kubernetes.io/secure-backends: "true" will automatically be set
  annotations:
  #  kubernetes.io/ingress.class: nginx
  #  kubernetes.io/tls-acme: true
  ingressClass:

##
## Init containers parameters:
## volumePermissions: Change the owner of the persist volume mountpoint to RunAsUser:fsGroup
##
volumePermissions:
  enabled: true

## forceBoot: executes 'rabbitmqctl force_boot' to force boot cluster shut down unexpectedly in an
## unknown order.
##
forceBoot:
  enabled: false

probes:
  logshipper:
    livenessProbe:
      initialDelaySeconds: 1
      periodSeconds: 10
      timeoutSeconds: 10
      failureThreshold: 3
  messagebus:
    livenessProbe:
      initialDelaySeconds: 120
      periodSeconds: 30
      failureThreshold: 6
      timeoutSeconds: 20
      successThreshold: 1
    readinessProbe:
      initialDelaySeconds: 10
      periodSeconds: 30
      timeoutSeconds: 20
      failureThreshold: 3
      successThreshold: 1

podPriority:
  messagebus:
    priorityClassName: ""

log:
  outputs:
    - stdout

labels: {}
annotations: {}
nodeSelector: {}

terminationGracePeriodSeconds:
  messagebus: 10

logShipper:
  storage:
    size: "500Mi"